services:
  db:
    image: postgres:16-alpine
    container_name: wellversed-postgres
    environment:
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB-wellversed01DEV}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d wellversed01DEV"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - wellversed-network

  # db-init:
  #   build:
  #     context: ./data
  #     dockerfile: Dockerfile.init
  #   container_name: wellversed-db-init
  #   environment:
  #     DATABASE_HOST: ${DATABASE_HOST}
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     DATABASE_USER: ${DATABASE_USER}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     FORCE_DB_INIT: ${FORCE_DB_INIT:-false}
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - wellversed-network
  #   volumes:
  #     - ./data:/data
  #     - ./bible_data:/bible_data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wellversed-backend
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    ports:
      - "8000:8000"
    # depends_on:
    #   db-init:
    #     condition: service_completed_successfully
    networks:
      - wellversed-network
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wellversed-frontend
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - wellversed-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    # environment:
      # - NODE_ENV=${NODE_ENV}
    command: npm run serve

networks:
  wellversed-network:
    driver: bridge

volumes:
  postgres_data: